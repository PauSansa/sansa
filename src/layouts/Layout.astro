---
import { ViewTransitions } from 'astro:transitions';
interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
   <!-- Google tag (gtag.js) -->
    <script type="text/partytown" async src="https://www.googletagmanager.com/gtag/js?id=G-VS695LQJ82"></script>
    <script type="text/partytown">
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-VS695LQJ82');
    </script>
    <!-- View Transitions -->
    <ViewTransitions fallback="none" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="robots" content="/favicon/sitemap-index.xml" />
    <!-- Basic OG tags for sharing your website's content on platforms like Facebook and LinkedIn -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://sansadev.me" />
    <meta property="og:image" content="https://sansadev.me/me.webp" />
    <!-- Basic Twitter Card tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content="https://sansadev.me/me.webp" />

    <link rel="preconnect" href="https://cdn.fontshare.com" />
  </head>
  <body class="bg-darkslate-700 md:h-screen flex justify-center items-center text-white">
    <div class="loaderRef bg-darkslate-700 text-neutral-50 text-3xl font-black uppercase flex justify-center items-center w-screen h-screen z-50 fixed top-0 bottom-0 right-0 left-0">
    </div>
    <script>
      // @ts-nocheck
      import { stagger, spring, timeline} from "motion";
      const cards = document.querySelectorAll(".card");
      const href = document.querySelectorAll(".href");
      
    
      const sequence = [
        [
        ".loaderRef",
        { opacity: 0, pointerEvents: "none" },
        { easing: "ease-out" },
        ],
        [
        cards,
        { y: ["40%", "0%"], opacity: [0, 1] },
        {
          at: "-0.1",
          duration: 0.4,
          delay: stagger(0.3),
          easing: spring({ velocity: 100, stiffness: 50, damping: 10 }),
        },
        ],
        [
            href,
            { borderColor: ["rgb(44,44,44)", "rgba(255,0,0,0.5)"] }, 
            {
              duration: 0.2, // Ajusta este valor según sea necesario
              delay: 0.1, // Ajusta este valor según sea necesario
              easing: "ease-out",
            },
        ],
        [
            href,
            { borderColor: ["rgba(255,0,0,0.5)", "#2c2c2c"] }, 
            {
              duration: 0.2, // Ajusta este valor según sea necesario
              delay: 0.3, // Ajusta este valor según sea necesario
              easing: "ease-out",
            },
        ],
      ];
      
      timeline(sequence).finished.then(() => {
          href.forEach((element) => {
            console.log(element)
            element.addEventListener('mouseenter', function(){
              this.style.borderColor = "#7D21A8";
            })
            element.addEventListener('mouseleave', function(){
              this.style.borderColor = "#2c2c2c";
            })
          });
        });;
      
      const fastSequenceAnimate = () => {
        const cards = document.querySelectorAll(".card");
        const href = document.querySelectorAll(".href");
    
        const fastSequence = [
          [
            ".loaderRef",
            { opacity: 0, pointerEvents: "none" },
            { easing: "ease-out" },
          ],
          [
            cards,
            { y: ["40%", "0%"], opacity: [0, 1] },
            {
              at: "-0.1",
              duration: 0.1,
              delay: stagger(0.1),
              easing: spring({ velocity: 100, stiffness: 50, damping: 10 }),
            },
          ],
          [
            href,
            { borderColor: ["rgb(44,44,44)", "rgba(255,0,0,0.5)"] }, 
            {
              duration: 0.2, // Ajusta este valor según sea necesario
              delay: 0.1, // Ajusta este valor según sea necesario
              easing: "ease-out",
              fill: "backwards"
            },
        ],
        [
            href,
            { borderColor: ["rgba(255,0,0,0.5)", "#2c2c2c"] }, 
            {
              duration: 0.2, // Ajusta este valor según sea necesario
              delay: 0.3, // Ajusta este valor según sea necesario
              easing: "ease-out",
            },
        ],
        ];
        timeline(fastSequence).onFinish(() => {
          href.forEach((element) => {
            element.addEventListener('mouseenter', function(){
              this.style.borderColor = "#7D21A8";
            })
          });
        });
      }
    
      
    
      
    
      document.addEventListener("astro:after-swap", fastSequenceAnimate)
    
      </script>
    <slot />
  </body>
</html>

<style is:global>
  @font-face {
    font-family: "CabinetGrotesk";
    src: url("/fonts/CabinetGrotesk-Variable.ttf") format("truetype-variations");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
    font-weight: 100 1000;
  }
  @font-face {
    font-family: "Satoshi";
    src: url("/fonts/Satoshi-Variable.ttf") format("truetype-variations");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
    font-weight: 100 1000;
  }

  body {
    margin: 0;
    font-family: "Satoshi", sans-serif;

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  h1,
  h2 {
    font-size: 20px !important;
    font-weight: 700 !important;
    font-family: "CabinetGrotesk", sans-serif;
  }

  b {
    font-weight: 700 !important;
  }
</style>
